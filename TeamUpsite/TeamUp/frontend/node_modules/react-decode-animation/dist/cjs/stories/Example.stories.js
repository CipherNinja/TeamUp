"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Template = void 0;
const react_1 = __importStar(require("react"));
const __1 = __importDefault(require(".."));
const DecodeAnimationExample = ({}) => {
    const [decodeState, setDecodeState] = (0, react_1.useState)("Paused");
    const [finished, setFinished] = (0, react_1.useState)(false);
    const ref = (0, react_1.useRef)(null);
    return (react_1.default.createElement("div", { style: { fontFamily: "sans-serif", paddingTop: 1000 } },
        react_1.default.createElement(__1.default, { autoplay: true, text: "Lorem ipsum dolor sit amet.", ref: ref, state: decodeState, characterOptions: { intervalDeviation: 20, interval: 70 }, interval: 100, onFinish: () => setFinished(true), style: {
                display: "inline-block",
                backgroundColor: "#ececec",
                // borderRadius: 4,
                width: 300,
                padding: 16,
                marginBottom: 16,
            } }),
        react_1.default.createElement("div", null,
            "onFinished Called: ",
            finished ? "Yes" : "No"),
        react_1.default.createElement("section", { style: {
                border: "1px solid grey",
                borderRadius: 4,
                padding: "0 16px 16px",
                marginTop: 8,
            } },
            react_1.default.createElement("h3", null, "Control with Ref"),
            react_1.default.createElement("p", null, "With refs, DecodeAnimation will handle the state automatically. The state, however, cannot be accessed"),
            react_1.default.createElement("button", { onClick: () => {
                    var _a;
                    (_a = ref.current) === null || _a === void 0 ? void 0 : _a.play();
                } }, "Play"),
            react_1.default.createElement("button", { onClick: () => { var _a; return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.pause(); } }, "Pause"),
            react_1.default.createElement("button", { onClick: () => { var _a; return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.reset(); } }, "Reset")),
        react_1.default.createElement("section", { style: {
                border: "1px solid grey",
                borderRadius: 4,
                padding: "0 16px 16px",
                marginTop: 8,
            } },
            react_1.default.createElement("h3", null, "Control with States"),
            react_1.default.createElement("p", null, "With setting an external state, it will trigger DecodeAnimation to re-render. The external state will not be updated when the state of DecodeAnimation changes"),
            react_1.default.createElement("button", { onClick: () => setDecodeState("Playing") }, "Play"),
            react_1.default.createElement("button", { onClick: () => setDecodeState("Paused") }, "Pause"),
            react_1.default.createElement("button", { onClick: () => setDecodeState("Reset") }, "Reset"))));
};
exports.default = {
    title: "Example",
    component: DecodeAnimationExample,
};
const Template = (args) => react_1.default.createElement(DecodeAnimationExample, Object.assign({}, args));
exports.Template = Template;
//# sourceMappingURL=Example.stories.js.map